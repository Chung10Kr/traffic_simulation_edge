plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Client Websocket
	implementation 'org.java-websocket:Java-WebSocket:1.5.4'
	implementation group: 'org.json', name: 'json', version: '20160810'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

	// Server Websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.15.2'

	// visual에 필요한거 end

	implementation 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// 프로메테우스
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.github.mweirauch:micrometer-jvm-extras:0.2.2'


	annotationProcessor 'org.projectlombok:lombok'



	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

}


tasks.named('test') {
	useJUnitPlatform()
}
